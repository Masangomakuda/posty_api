openapi: 3.0.3
info:
  title: 'Laravel REST API'
  description: 'Laravel Api'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'This endpoint is used to login a user to the system.'
      parameters: []
      responses:
        200:
          description: 'Successful Login'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User Login Successfully'
                  access_token: 8|MgowQLkdpShwrb8AI9j1YAGmwnDjAOeE17XrP5nb
                  token_type: Bearer
                properties:
                  message:
                    type: string
                    example: 'User Login Successfully'
                  access_token:
                    type: string
                    example: 8|MgowQLkdpShwrb8AI9j1YAGmwnDjAOeE17XrP5nb
                  token_type:
                    type: string
                    example: Bearer
        401:
          description: 'Failed Login'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid login credentials'
                properties:
                  message:
                    type: string
                    example: 'Invalid login credentials'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: ian@gmail.com
                password:
                  type: string
                  description: ''
                  example: '12345678'
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aliquam
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ekuhn@example.net
                password:
                  type: string
                  description: ''
                  example: ut
              required:
                - name
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Auth
      security: []
  /api/v1/user:
    get:
      summary: ''
      operationId: getApiV1User
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/{fallbackPlaceholder}':
    get:
      summary: ''
      operationId: getApiFallbackPlaceholder
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Route Not Found. If error persists, contact Kudam775@gmail.com'
                properties:
                  message:
                    type: string
                    example: 'Route Not Found. If error persists, contact Kudam775@gmail.com'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: fallbackPlaceholder
        description: ''
        example: gx9N3U
        required: true
        schema:
          type: string
  /api/v1/posts:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Posts
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                post:
                  type: string
                  description: 'Must not be greater than 100 characters. Must be at least 10 characters.'
                  example: ofbxiyxqbstosjgnlwsgcftfogjnadyqrsvnmvehhvqwvvdpyssydqskmnkhlpodjlasgxicyvjhoooaukg
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
              required:
                - post
                - image
      security: []
  '/api/v1/posts/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Posts
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post:
                  type: string
                  description: 'Must not be greater than 100 characters. Must be at least 10 characters.'
                  example: qgppmqkinmrgjxvxxqwalmwqvodgybboxkp
              required:
                - post
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: repellat
        required: true
        schema:
          type: string
  '/api/v1/posts/search/{searchword}':
    get:
      summary: 'Search for a specified resource from storage.'
      operationId: searchForASpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Posts
      security: []
    parameters:
      -
        in: path
        name: searchword
        description: ''
        example: non
        required: true
        schema:
          type: string
  /api/v1/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: est
        required: true
        schema:
          type: string
tags:
  -
    name: Auth
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: Posts
    description: ''
  -
    name: Users
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
